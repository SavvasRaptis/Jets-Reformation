function [DIST,ID] = distance_to_MP(XN_PD, VEL, XGSM, YGSM, ZGSM)
%
%Input:
% XN_PD - EITHER SOLAR WIND PROTON NUMBER DENSITY (PER CC) (IF VEL&gt0)
%         OR THE SOLAR WIND RAM PRESSURE IN NANOPASCALS   (IF VEL&lt0)
% VEL - EITHER SOLAR WIND VELOCITY (KM/SEC)
%       OR ANY NEGATIVE NUMBER, WHICH INDICATES THAT XN_PD STANDS
%       FOR THE SOLAR WIND PRESSURE, RATHER THAN FOR THE DENSITY
%
% XGSM,YGSM,ZGSM - COORDINATES OF THE OBSERVATION POINT IN EARTH RADII
%
%Output:
% DIST -  THE DISTANCE BETWEEN THE ABOVE TWO POINTS, IN RE,
%
%Descrition of the function:
% THIS SUBROUTINE DEFINES THE POSITION OF A POINT (XMGNP,YMGNP,ZMGNP)
% AT THE MODEL MAGNETOPAUSE, CLOSEST TO A GIVEN POINT OF SPACE
% (XGSM,YGSM,ZGSM),   AND THE DISTANCE BETWEEN THEM (DIST)
%
%Using:
%
%Work method:
%
%Error:
%
%Description of variables:
%
%Written by Robert Isaksson in the summer of -03
% Translated from the fortran cod:
% THE PRESSURE-DEPENDENT MAGNETOPAUSE IS THAT USED IN THE T95_01 AND T96_01
%  MODELS  (TSYGANENKO, JGR, V.100, P.5599, 1995; ESA SP-389, P.181, OCT. 1996)
%
%            CODED BY:  N.A. TSYGANENKO, AUG.1, 1995.

%--------------------- the beginning --------------------------

if VEL<0
  PD=XN_PD;
else
  PD=1.94E-6*XN_PD*VEL^2;  % PD IS THE SOLAR WIND DYNAMIC PRESSURE (IN NANOPASCALS)
end

RAT=PD/2.0;  % RATIO OF PD TO THE AVERAGE PRESSURE, ASSUMED AS 2 nPa
RAT16=RAT^0.1376; % THE POWER IN THE SCALING FACTOR IS THE BEST-FIT VALUE
% OBTAINED FROM DATA IN THE T95_01 VERSION OF THE MODEL

A0=70;
S00=1.08;
X00=5.48;    %  VALUES OF THE MAGNETOPAUSE PARAMETERS FOR  PD = 2 nPa

A=A0/RAT16;
S0=S00;
X0=X00/RAT16;   %  VALUES OF THE MAGNETOPAUSE PARAMETERS, SCALED TO THE
% ACTUAL PRESSURE

XM=X0-A;    %  THIS IS THE X-COORDINATE OF THE SEAM BETWEEN THE
% ELLIPSOID AND THE CYLINDER

%        (FOR DETAILS ON THE ELLIPSOIDAL COORDINATES, SEE THE PAPER:
%            N.A.TSYGANENKO, SOLUTION OF CHAPMAN-FERRARO PROBLEM FOR AN
%             ELLIPSOIDAL MAGNETOPAUSE, PLANET.SPACE SCI., V.37, P.1037, 1989).
%
if (YGSM ~= 0 || ZGSM ~= 0)
  PHI=atan2(YGSM,ZGSM); %Controll that fortran atan2 is equal to matlab atan2
else
  PHI=0;
end

RHO=sqrt(YGSM^2+ZGSM^2);

if (XGSM<XM)
  XMGNP=XGSM;
  RHOMGNP=A*sqrt(S0^2-1);
  YMGNP=RHOMGNP*sin(PHI);
  ZMGNP=RHOMGNP*cos(PHI);
  DIST=sqrt((XGSM-XMGNP)^2+(YGSM-YMGNP)^2+(ZGSM-ZMGNP)^2);
  if (RHOMGNP>RHO)
    ID=+1;
  end
  if (RHOMGNP<RHO)
    ID=-1;
  end
  return
end

XKSI=(XGSM-X0)/A+1;
XDZT=RHO/A;
SQ1=sqrt((1+XKSI)^2+XDZT^2);
SQ2=sqrt((1-XKSI)^2+XDZT^2);
SIGMA=0.5*(SQ1+SQ2);
TAU=0.5*(SQ1-SQ2);

%  NOW CALCULATE (X,Y,Z) FOR THE CLOSEST POINT AT THE MAGNETOPAUSE

XMGNP=X0-A*(1-S0*TAU);
RHOMGNP=A*sqrt((S0^2-1)*(1-TAU^2));
YMGNP=RHOMGNP*sin(PHI);
ZMGNP=RHOMGNP*cos(PHI);

%  NOW CALCULATE THE SHORTEST DISTANCE BETWEEN THE POINT XGSM,YGSM,ZGSM AND THE
%            MAGNETOPAUSE

DIST=sqrt((XGSM-XMGNP)^2+(YGSM-YMGNP)^2+(ZGSM-ZMGNP)^2);

if (SIGMA > S0)
  ID=-1;   %  ID=-1 MEANS THAT THE POINT LIES OUTSIDE
end
if (SIGMA < S0)
  ID=+1;   %  ID=+1 MEANS THAT THE POINT LIES INSIDE
end                                          %THE MAGNETOSPHERE
