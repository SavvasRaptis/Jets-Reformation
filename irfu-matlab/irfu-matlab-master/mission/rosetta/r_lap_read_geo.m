function geo = r_lap_read_geo(filename, startRow, endRow)
% r_lap_read_geo -- read LAP geometry file
%
% Auto-generated by MATLAB on 2019/03/08 16:07:45, then tuned by Anders

%% Initialize variables.
delimiter = ',';
if nargin<=2
  startRow = 2;
  endRow = inf;
end

[~,NAME,EXT] = fileparts(filename);
fName = [NAME EXT];
geo.name = fName;

%% Format for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = ['%s', repmat('%f',[1,15]), '%[^\n\r]'];
%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, ...
  'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, ...
  'HeaderLines', startRow(1)-1, 'ReturnOnError', false, ...
  'EndOfLine', '\r\n');
for block=2:length(startRow)
  frewind(fileID);
  dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, ...
    'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, ...
    'HeaderLines', startRow(block)-1, 'ReturnOnError', false, ...
    'EndOfLine', '\r\n');
  for col=1:length(dataArray)
    dataArray{col} = [dataArray{col}; dataArrayBlock{col}];
  end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
geo.t = date2epoch(datenum(dataArray{:, 1},'yyyy-mm-ddTHH:MM:SS.FFF'));
geo.xcso = dataArray{:, 2};
geo.ycso = dataArray{:, 3};
geo.zcso = dataArray{:, 4};
geo.xcseq = dataArray{:, 5};
geo.ycseq = dataArray{:, 6};
geo.zcseq = dataArray{:, 7};
geo.lat = dataArray{:, 8};
geo.lon = dataArray{:, 9};
geo.sza = dataArray{:, 10};
geo.saa = dataArray{:, 11};
geo.sea = dataArray{:, 12};
geo.ill1 = dataArray{:, 13};
geo.ill2 = dataArray{:, 14};
geo.caa = dataArray{:, 15};
geo.cea = dataArray{:, 16};
end