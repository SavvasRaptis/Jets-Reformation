function [b_n, l2_l3_ratio, v1_mv_nest, v2_mv_nest, v3_mv_nest]=irf_minvar_nest(data,cs_centre,tint)
%IRF_MINVAR_NEST performs the minimum variance technique for an assymetric
%interval defined from the centre of the current sheet and in the interval tint
%
%
% The nested analysis starts from this center point and does minimum variance on this point
%and the two surrounding. Each larger member of a nest is generated by adding
%one data point at each end of the preceeding segment until the end of the
%interval selected is reached. If the normal vector and normal field component are strictly
%time-stationary, the results from all different nested segments should be the
%same. Error estimates are calculated according to 8.3.1 in Analysis
%Methods for multispacecraft data.
%
% IRF_MINVAR_NEST(data,cs_centre,tint)
%  data- vector to use, [x(:,column(1)) x(:,column(2)) x(:,column(3))]
%  cs_centre- definition of the current sheet center e.g. toepoch([2001 01 26 10 29 00])
%  tint- The interval on which the nested analysis is performed e.g.
%[toepoch([2001 01 26 10 28 00]) toepoch([2001 01 26 10 34 00])]]
%
%
% See also IRF_MINVAR_NEST_GUI, IRF_MINVAR
%
% $Id$

fromepoch(cs_centre);
fromepoch(tint);

b=irf_tlim(data,tint);
n_elem=length(b(:,1));
arr= 1:n_elem;
ind_c=find(abs(b(:,1)-cs_centre) == min(abs(b(:,1)-cs_centre)));
min_int=ind_c;
plus_int=n_elem-ind_c;
int=max(min_int,plus_int);
coord=3; %1=l, 2=m 3=n
for j=1:int-1
  ind_s=ind_c-j;
  ind_e=ind_c+j;
  if ind_e > n_elem
    ind_e=n_elem;
  end
  if ind_s < 1
    ind_s=1;
  end
  [out,l,v]=irf_minvar(b(ind_s:ind_e,:));
  if (v(coord,1)<0), v=-v; end % change sign so that min var always has  positive x
  if (v(coord,3)>0.5 && v(coord,3)>2*v(coord,1)), v=-v; end % change sign so that z is  negative if z is dominating
  l2_l3_ratio(j,2)=l(2)/l(3);
  v1_mv_nest(j,2:4)=v(1,:);
  v2_mv_nest(j,2:4)=v(2,:);
  v3_mv_nest(j,2:4)=v(3,:);
  M=2*j+1;
  l2_l3_ratio(j,1)=M;
  v1_mv_nest(j,1)=M;
  v2_mv_nest(j,1)=M;
  v3_mv_nest(j,1)=M;
  phi_31(j)=sqrt(l(3)/(double(M)-1)*l(1)/(l(3)-l(1))^2); %
  phi_32(j)=sqrt(l(3)/(double(M)-1)*l(2)/(l(3)-l(2))^2); %
  b_mean=mean(b(ind_s:ind_e,:));
  b_n(j,2)=irf_dot(b_mean,v3_mv_nest(j,:),1);
  b_n(j,1)=M;
  b_n(j,3)=sqrt(l(3)/(double(M)-1)+(phi_32(j)*(irf_dot(b_mean,v(2,:),1)))^2+(phi_31(j)*(irf_dot(b_mean,v(1,:),1)))^2);
end
